version: "3.8"

services:
  # bellis containers
  backend:
    hostname: backend
    image: registry.cn-shanghai.aliyuncs.com/bellis/backend
    build:
      dockerfile: Dockerfile
      context: ..
      args:
        MODULE: backend
        PORT: 7001
    networks:
      - bellis
    ports:
      - "7001:7001"
    deploy:
      restart_policy:
        condition: on-failure
      replicas: 2
  dispatcher:
    hostname: dispatcher
    image: registry.cn-shanghai.aliyuncs.com/bellis/dispatcher
    build:
      dockerfile: Dockerfile
      context: ..
      args:
        MODULE: dispatcher
    networks:
      - bellis
    deploy:
      restart_policy:
        condition: on-failure
      replicas: 2
  envoy:
    hostname: envoy
    image: registry.cn-shanghai.aliyuncs.com/bellis/envoy
    build:
      dockerfile: Dockerfile
      context: ..
      args:
        MODULE: envoy
    networks:
      - bellis
  sentry:
    hostname: sentry
    image: registry.cn-shanghai.aliyuncs.com/bellis/sentry
    build:
      dockerfile: Dockerfile
      context: ..
      args:
        MODULE: sentry
    networks:
      - bellis
    deploy:
      restart_policy:
        condition: on-failure
      replicas: 3

  # database containers

  etcd:
    hostname: etcd
    networks:
      - bellis
    image: docker.io/bitnami/etcd
    environment:
      - ALLOW_NONE_AUTHENTICATION=yes
      - ETCD_ADVERTISE_CLIENT_URLS=http://etcd:2379
    volumes:
      - '/bellis/dist/database/etcd:/bitnami/etcd'
    deploy:
      restart_policy:
        condition: on-failure
      replicas: 1

  etcd-keeper:
    image: evildecay/etcdkeeper
    networks:
      - bellis
    environment:
      HOST: "0.0.0.0"
    ports:
      - 8500:8080
    depends_on:
      - etcd
    deploy:
      restart_policy:
        condition: on-failure
      replicas: 1

  influxdb:
    hostname: influxdb
    image: influxdb
    networks:
      - bellis
    environment:
      - DOCKER_INFLUXDB_INIT_ORG=bellis
      - DOCKER_INFLUXDB_INIT_BUCKET=backend
      - DOCKER_INFLUXDB_INIT_USERNAME=minoic
      - DOCKER_INFLUXDB_INIT_PASSWORD=Nightgod_
      - TZ=Asia/Shanghai
    ports:
      - "8086:8086"
    volumes:
      - /bellis/dist/database/influxdb:/var/lib/influxdb2
    deploy:
      restart_policy:
        condition: on-failure
      replicas: 1

  redis:
    hostname: redis
    image: redis
    networks:
      - bellis
    volumes:
      - /bellis/dist/database/redis:/data
    deploy:
      restart_policy:
        condition: on-failure
      replicas: 1

  redis-commander:
    hostname: redis-commander
    image: rediscommander/redis-commander:latest

    networks:
      - bellis
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8082:8081"
    depends_on:
      - redis
    deploy:
      restart_policy:
        condition: on-failure
      replicas: 1

networks:
  bellis:
    driver: overlay
    external: true